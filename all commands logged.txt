-------------------
Connect-AzAccount
----------------------
$githubOrganizationName = 'kajisakwestin'
$githubRepositoryName = 'infrastructure-as-code-v1'
------------------------
Run the following code, which creates a workload identity for the test environment and associates it with your GitHub repository:

$testApplicationRegistration = New-AzADApplication -DisplayName 'infrastructure-as-code-v1-test'

New-AzADAppFederatedCredential `
   -Name 'infrastructure-as-code-v1-test' `
   -ApplicationObjectId $testApplicationRegistration.Id `
   -Issuer 'https://token.actions.githubusercontent.com' `
   -Audience 'api://AzureADTokenExchange' `
   -Subject "repo:$($githubOrganizationName)/$($githubRepositoryName):environment:Test"

New-AzADAppFederatedCredential `
   -Name 'infrastructure-as-code-v1-test-branch' `
   -ApplicationObjectId $testApplicationRegistration.Id `
   -Issuer 'https://token.actions.githubusercontent.com' `
   -Audience 'api://AzureADTokenExchange' `
   -Subject "repo:$($githubOrganizationName)/$($githubRepositoryName):ref:refs/heads/main"
----------------------------
Run the following code, which follows a similar process for the production environment:

$productionApplicationRegistration = New-AzADApplication -DisplayName 'infrastructure-as-code-v1-production'

New-AzADAppFederatedCredential `
   -Name 'infrastructure-as-code-v1-production' `
   -ApplicationObjectId $productionApplicationRegistration.Id `
   -Issuer 'https://token.actions.githubusercontent.com' `
   -Audience 'api://AzureADTokenExchange' `
   -Subject "repo:$($githubOrganizationName)/$($githubRepositoryName):environment:Production"

New-AzADAppFederatedCredential `
   -Name 'infrastructure-as-code-v1-production-branch' `
   -ApplicationObjectId $productionApplicationRegistration.Id `
   -Issuer 'https://token.actions.githubusercontent.com' `
   -Audience 'api://AzureADTokenExchange' `
   -Subject "repo:$($githubOrganizationName)/$($githubRepositoryName):ref:refs/heads/main"
------------------------
To create the test environment's resource group and grant the workload identity access to it, run the following Azure PowerShell commands in the Visual Studio Code terminal:

$testResourceGroup = New-AzResourceGroup -Name InfraStructureAsCodeV1Test -Location westus3

New-AzADServicePrincipal -AppId $($testApplicationRegistration.AppId)

New-AzRoleAssignment `
   -ApplicationId $($testApplicationRegistration.AppId) `
   -RoleDefinitionName Contributor `
   -Scope $($testResourceGroup.ResourceId)
----------------------
Run a similar process to create the production environment's resource group:

$productionResourceGroup = New-AzResourceGroup -Name InfraStructureAsCodeV1Production -Location westus3

New-AzADServicePrincipal -AppId $($productionApplicationRegistration.AppId)

New-AzRoleAssignment `
   -ApplicationId $($productionApplicationRegistration.AppId) `
   -RoleDefinitionName Contributor `
   -Scope $($productionResourceGroup.ResourceId)
---------------------
$azureContext = Get-AzContext
Write-Host "AZURE_CLIENT_ID_TEST: $($testApplicationRegistration.AppId)"
Write-Host "AZURE_CLIENT_ID_PRODUCTION: $($productionApplicationRegistration.AppId)"
Write-Host "AZURE_TENANT_ID: $($azureContext.Tenant.Id)"
Write-Host "AZURE_SUBSCRIPTION_ID: $($azureContext.Subscription.Id)"
-------------------
